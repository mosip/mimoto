#Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${mosip.injiweb.google.client.id}
spring.security.oauth2.client.registration.google.client-secret=${mosip.injiweb.google.client.secret}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth?prompt=select_account
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

#Database config
spring.datasource.url=jdbc:postgresql://${mosip.mimoto.database.hostname}:${mosip.mimoto.database.port}/inji_mimoto
spring.datasource.username=mimotouser
spring.datasource.password=${db.dbuser.password}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.datasource.driver-class-name=org.postgresql.Driver
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.hbm2ddl.auto=none
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.show_sql=false
hibernate.format_sql=false
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false
hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# keymanager database properties
keymanager.persistence.jdbc.driver=org.postgresql.Driver
keymanager_database_url = jdbc:postgresql://${mosip.mimoto.database.hostname}:${mosip.mimoto.database.port}/inji_mimoto
keymanager_database_password=${db.dbuser.password}
keymanager_database_username= mimotouser
keymanager.persistence.jdbc.schema=mimoto

#Redis configuration
spring.session.store-type=redis
spring.data.redis.host=${redis.host}
spring.data.redis.port=${redis.port}
spring.data.redis.password=${redis.password}
server.servlet.session.timeout=30m
spring.session.redis.namespace=injiweb:session:
spring.data.redis.timeout=10s
spring.data.redis.connect-timeout=10s

mosip.security.ignore-auth-urls=/safetynet/**,/actuator/**,/swagger-ui/**,/v3/api-docs/**,\
  /allProperties,/credentials/**,/credentialshare/**,/binding-otp,/wallet-binding,/get-token/**,\
  /issuers,/issuers/**,/authorize,/req/otp,/vid,/req/auth/**,/req/individualId/otp,/aid/get-individual-id,/users/me/cache,\
 /verifiers, /auth/*/token-login

mosip.inji.app.id=MIMOTO
mosip.inji.encryption.algorithm=AES
mosip.inji.encryption.key.size=256
mosip.inji.jwt.default.algorithm=RS256
