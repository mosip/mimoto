WalletBinding:
   Mimoto_WalletBinding_uin_OTP_Valid_Smoke:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with valid UIN
      uniqueIdentifier: TC_Mimoto_WalletBinding_01
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/WalletBinding/WalletBindingResult
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_OTP_Valid_Smoke:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with valid VID
      uniqueIdentifier: TC_Mimoto_WalletBinding_02
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/WalletBinding/WalletBindingResult
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_03
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "asdf$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_PastVal_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with past request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_04
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "2022-11-07T06:51:30.195Z",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_FutureVal_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with future request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_05
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "2033-11-07T06:51:30.195Z",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty requestime
      uniqueIdentifier: TC_Mimoto_WalletBinding_06
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing requestime
      uniqueIdentifier: TC_Mimoto_WalletBinding_07
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$REMOVE$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid individualId
      uniqueIdentifier: TC_Mimoto_WalletBinding_08
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$tyhg",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "binding_auth_failed"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty individualId
      uniqueIdentifier: TC_Mimoto_WalletBinding_09
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_individual_id"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with individualId being null
      uniqueIdentifier: TC_Mimoto_WalletBinding_10
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "null",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "binding_auth_failed"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with individualId being missing
      uniqueIdentifier: TC_Mimoto_WalletBinding_11
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$REMOVE$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_individual_id"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_SpaceVal_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with individualId value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_12
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": " ",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_individual_id"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid authfactortype
      uniqueIdentifier: TC_Mimoto_WalletBinding_13
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "dfg5",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty authfactortype
      uniqueIdentifier: TC_Mimoto_WalletBinding_14
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_format"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing authfactortype
      uniqueIdentifier: TC_Mimoto_WalletBinding_15
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "$REMOVE$",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_format"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_SpaceVal_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with authfactortype value being just space
      uniqueIdentifier: TC_Mimoto_WalletBinding_16
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": " ",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_format"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with authfactortype value being just null
      uniqueIdentifier: TC_Mimoto_WalletBinding_17
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "null",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid challenge
      uniqueIdentifier: TC_Mimoto_WalletBinding_18
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "gd5$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing challenge
      uniqueIdentifier: TC_Mimoto_WalletBinding_19
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$REMOVE$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_length"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty challenge
      uniqueIdentifier: TC_Mimoto_WalletBinding_20
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_length"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_SpaceVal_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with challenge value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_21
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": " ",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_length"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with challenge value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_22
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: 
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "null",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid formate
      uniqueIdentifier: TC_Mimoto_WalletBinding_23
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "GT$r5",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing formate
      uniqueIdentifier: TC_Mimoto_WalletBinding_24
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "$REMOVE$",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty formate
      uniqueIdentifier: TC_Mimoto_WalletBinding_25
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_SpaceVal_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with formate value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_26
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": " ",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with formate value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_27
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "null",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid authFactorType1
      uniqueIdentifier: TC_Mimoto_WalletBinding_28
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "hy$5",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing authFactorType1
      uniqueIdentifier: TC_Mimoto_WalletBinding_29
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "$REMOVE$",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty authFactorType1
      uniqueIdentifier: TC_Mimoto_WalletBinding_30
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_SpaceVal_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with authFactorType1 value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_31
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": " ",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with authFactorType1 value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_32
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "null",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid format1
      uniqueIdentifier: TC_Mimoto_WalletBinding_33
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "hju$5",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing format1
      uniqueIdentifier: TC_Mimoto_WalletBinding_34
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "$REMOVE$",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Empty_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with empty format1
      uniqueIdentifier: TC_Mimoto_WalletBinding_35
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_SpaceVal_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with format1 value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_36
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": " ",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with format1 value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_37
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "null",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Invalid_publicKey_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with invalid publickey
      uniqueIdentifier: TC_Mimoto_WalletBinding_38
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "ghj$4",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-028"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Null_publicKey_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with null as publickey
      uniqueIdentifier: TC_Mimoto_WalletBinding_39
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "null",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-028"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_uin_Missing_publicKey_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VC with missing publickey
      uniqueIdentifier: TC_Mimoto_WalletBinding_40
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$REMOVE$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-028"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with invalid request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_41
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "asdf$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_PastVal_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with past request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_42
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "2022-11-07T06:51:30.195Z",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_FutureVal_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with future request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_43
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "2033-11-07T06:51:30.195Z",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with empty request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_44
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_RequestTime_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with missing request time
      uniqueIdentifier: TC_Mimoto_WalletBinding_45
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$REMOVE$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with invalid individualId
      uniqueIdentifier: TC_Mimoto_WalletBinding_46
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$tyhg",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "binding_auth_failed"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with empty individualId
      uniqueIdentifier: TC_Mimoto_WalletBinding_47
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_individual_id"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with null individualId
      uniqueIdentifier: TC_Mimoto_WalletBinding_48
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "null",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "binding_auth_failed"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind vid VC with missing individualId
      uniqueIdentifier: TC_Mimoto_WalletBinding_49
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$REMOVE$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_individual_id"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_SpaceVal_IndividualId_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with individualId value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_50
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": " ",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_individual_id"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with invalid authfactortype
      uniqueIdentifier: TC_Mimoto_WalletBinding_51
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "dfg5",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with empty authfactortype
      uniqueIdentifier: TC_Mimoto_WalletBinding_52
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with missing authfactortype
      uniqueIdentifier: TC_Mimoto_WalletBinding_53
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "$REMOVE$",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_SpaceVal_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with authfactortype value being just space
      uniqueIdentifier: TC_Mimoto_WalletBinding_54
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_auth_factor_type
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": " ",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_AuthFactorType_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with authfactortype value being just null
      uniqueIdentifier: TC_Mimoto_WalletBinding_55
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "null",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],        
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with invalid challenge
      uniqueIdentifier: TC_Mimoto_WalletBinding_56
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "gd5$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with missing challenge
      uniqueIdentifier: TC_Mimoto_WalletBinding_57
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$REMOVE$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with empty challenge
      uniqueIdentifier: TC_Mimoto_WalletBinding_58
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_SpaceVal_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with challenge value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_59
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": " ",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_Challenge_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with challenge value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_60
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "null",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge"
    }
  ],       
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with invalid formate
      uniqueIdentifier: TC_Mimoto_WalletBinding_61
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "GT$r5",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with missing formate
      uniqueIdentifier: TC_Mimoto_WalletBinding_62
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "$REMOVE$",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with empty formate
      uniqueIdentifier: TC_Mimoto_WalletBinding_63
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_SpaceVal_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with formate value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_64
      role: resident
      validityCheckRequired: true
      allowedErrorCodes: invalid_challenge_format
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": " ",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],      
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_Formate_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with formate value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_65
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "null",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with invalid authFactorType1
      uniqueIdentifier: TC_Mimoto_WalletBinding_66
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "hy$5",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with missing authFactorType1
      uniqueIdentifier: TC_Mimoto_WalletBinding_67
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "$REMOVE$",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with empty authFactorType1
      uniqueIdentifier: TC_Mimoto_WalletBinding_68
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_SpaceVal_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with authFactorType1 value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_69
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": " ",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_authFactorType1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with authFactorType1 value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_70
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "null",
        "format1": "jwt",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with invalid format1
      uniqueIdentifier: TC_Mimoto_WalletBinding_71
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "hju$5",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with missing format1
      uniqueIdentifier: TC_Mimoto_WalletBinding_72
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "$REMOVE$",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Empty_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with empty format1
      uniqueIdentifier: TC_Mimoto_WalletBinding_73
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_SpaceVal_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with format1 value having space
      uniqueIdentifier: TC_Mimoto_WalletBinding_74
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": " ",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_format1_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with format1 value having null
      uniqueIdentifier: TC_Mimoto_WalletBinding_75
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "null",
        "publicKey": "$PUBLICKEYFORBINDING$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_auth_factor_type_or_challenge_format"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Invalid_publicKey_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with invalid publickey
      uniqueIdentifier: TC_Mimoto_WalletBinding_76
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "ghj$4",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-028"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Null_publicKey_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with null as publickey
      uniqueIdentifier: TC_Mimoto_WalletBinding_77
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "null",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-028"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
           
       }
}'

   Mimoto_WalletBinding_vid_Missing_publicKey_Neg:
      endPoint: /v1/mimoto/wallet-binding
      description: Generating OTP to bind VID VC with missing publickey
      uniqueIdentifier: TC_Mimoto_WalletBinding_78
      role: resident
      validityCheckRequired: true
      restMethod: post
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/WalletBinding/WalletBinding
      outputTemplate: mimoto/error
      input: '{
        "requestTime": "$TIMESTAMP$",
        "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
        "authFactorType": "OTP",
        "challenge": "$ID:AddIdentity_Binding_smoke_Pos_EMAIL$",
        "format": "alpha-numeric",
        "authFactorType1": "WLA",
        "format1": "jwt",
        "publicKey": "$REMOVE$",        
        "sendOtp":{
           "requestTime": "$TIMESTAMP$",
            "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
           "otpChannels": [{channel: "EMAIL"},{channel: "PHONE"}],
           "sendOtpReqTemplate": "mimoto/BindingOtp/BindingOtp",
           "sendOtpEndPoint": "/v1/mimoto/binding-otp"
    }
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-028"
    }
  ],
        "sendOtpResp": {
           "maskedMobile": "$IGNORE$",
           "sendOtpResTemplate":"mimoto/BindingOtp/BindingOtpResult"
       }
}'