BindingOtp:
   Mimoto_BindingOtp_Valid_UIN_All_Smoke:
      endPoint: /v1/mimoto/binding-otp
      role: resident
      description: Creating OTP for binding a individualID with valid UIN
      uniqueIdentifier: TC_Mimoto_BindingOtp_01
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/BindingOtp/BindingOtpResult
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
        "maskedMobile": "$IGNORE$"
}'

   Mimoto_BindingOtp_Valid_vid_All_Smoke:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with valid VID
      uniqueIdentifier: TC_Mimoto_BindingOtp_02
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/BindingOtp/BindingOtpResult
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
        "maskedMobile": "$IGNORE$"
}'

   Mimoto_BindingOtp_UIN_Invalid_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with invalid UIN
      uniqueIdentifier: TC_Mimoto_BindingOtp_03
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "@#DSDFD@#",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "IDA-MLC-009"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Missing_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID without individualId attribute
      uniqueIdentifier: TC_Mimoto_BindingOtp_04
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$REMOVE$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Empty_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with individualId missing
      uniqueIdentifier: TC_Mimoto_BindingOtp_05
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_identifier"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Null_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with individualId value as null
      uniqueIdentifier: TC_Mimoto_BindingOtp_06
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "null",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "IDA-MLC-009"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_SpaceSeparated_otpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel value been spaced in between
      uniqueIdentifier: TC_Mimoto_BindingOtp_07
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "E M A I L"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Invalid_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with invalid OTP channel
      uniqueIdentifier: TC_Mimoto_BindingOtp_08
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "sdsgsg"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Missing_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel missing
      uniqueIdentifier: TC_Mimoto_BindingOtp_09
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "$IGNORE$"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Empty_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel being empty
      uniqueIdentifier: TC_Mimoto_BindingOtp_10
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: ""}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_otp_channel"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Null_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel value being null
      uniqueIdentifier: TC_Mimoto_BindingOtp_11
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "null"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Missing_OtpChannel_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel missing
      uniqueIdentifier: TC_Mimoto_BindingOtp_12
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$"
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Empty_OtpChannel_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel being empty
      uniqueIdentifier: TC_Mimoto_BindingOtp_13
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": ""
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_otp_channel"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Null_OtpChannel_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with OTP channel being empty
      uniqueIdentifier: TC_Mimoto_BindingOtp_14
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": "null"
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_otp_channel"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Invalid_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with invalid request time
      uniqueIdentifier: TC_Mimoto_AuthLock_07
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "2022-11-08T06:35:53",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Past_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with past request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_16
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "2022-11-07T06:51:30.195Z",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Future_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with future request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_17
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "2033-11-07T06:51:30.195Z",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Missing_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with missing request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_18
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$IGNORE$",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_UIN_Empty_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with empty request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_19
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "",
      "individualId": "$ID:AddIdentity_Binding_smoke_Pos_UIN$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Invalid_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with invalid VID
      uniqueIdentifier: TC_Mimoto_BindingOtp_20
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "@#DSDFD@#",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "IDA-MLC-009"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Missing_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with missing VID
      uniqueIdentifier: TC_Mimoto_BindingOtp_21
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$REMOVE$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Empty_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with empty VID
      uniqueIdentifier: TC_Mimoto_BindingOtp_22
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_identifier"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Null_individualId_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a individualID with invalid VID
      uniqueIdentifier: TC_Mimoto_BindingOtp_23
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "null",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "IDA-MLC-009"
    }
  ]
}'

   Mimoto_BindingOtp_vid_SpaceSeparated_otpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with OTP channel value been spaced in between
      uniqueIdentifier: TC_Mimoto_BindingOtp_24
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "E M A I L"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Invalid_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with invalid OTP channel
      uniqueIdentifier: TC_Mimoto_BindingOtp_25
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "sdsgsg"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Missing_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with missing OTP channel values
      uniqueIdentifier: TC_Mimoto_BindingOtp_26
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "$IGNORE$"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Empty_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with empty OTP channel values
      uniqueIdentifier: TC_Mimoto_BindingOtp_27
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: ""}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_otp_channel"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Null_OtpChannels_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with OTP channel values as null
      uniqueIdentifier: TC_Mimoto_BindingOtp_28
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "null"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Missing_OtpChannel_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with OTP channel values missing
      uniqueIdentifier: TC_Mimoto_BindingOtp_29
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$"
}'
      output: '{
  "errors": [
    {
      "errorCode": "RESIDENT-APP-011"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Empty_OtpChannel_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with OTP channel values empty
      uniqueIdentifier: TC_Mimoto_BindingOtp_30
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": ""
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_otp_channel"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Null_OtpChannel_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with OTP channel values as null
      uniqueIdentifier: TC_Mimoto_BindingOtp_31
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$TIMESTAMP$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": "null"
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_otp_channel"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Invalid_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with invalid request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_32
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "2022-11-08T06:35:53",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Past_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with past request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_33
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "2022-11-07T06:51:30.195Z",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Future_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with future request time
      uniqueIdentifier: TC_Mimoto_BindingOtp_34
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "2033-11-07T06:51:30.195Z",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Missing_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with request time missing
      uniqueIdentifier: TC_Mimoto_BindingOtp_35
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "$IGNORE$",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'

   Mimoto_BindingOtp_vid_Empty_RequestTime_Neg:
      endPoint: /v1/mimoto/binding-otp
      description: Creating OTP for binding a VID with request time empty
      uniqueIdentifier: TC_Mimoto_BindingOtp_36
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: mimoto/BindingOtp/BindingOtp
      outputTemplate: mimoto/error
      input: '{
      "requestTime": "",
      "individualId": "$ID:Generate_Perpetual_VID_Binding_Valid_Smoke_sid_vid$",
      "otpChannels": [{channel: "EMAIL"}]
}'
      output: '{
  "errors": [
    {
      "errorCode": "invalid_request"
    }
  ]
}'