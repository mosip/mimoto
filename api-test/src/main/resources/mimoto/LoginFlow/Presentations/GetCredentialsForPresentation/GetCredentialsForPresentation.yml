GetCredentialsForPresentation:
   Mimoto_GetCredentialsForPresentation_all_Valid_Smoke:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with presentation id and wallet id valid
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_01
      role: userDefinedCookie
      restMethod: get
      checkErrorsOnlyInResponse: true
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentationResult
      input: '{
        "cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "$ID:CreateWallet_all_Valid_Smoke_sid_walletId$",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
        "cookieName": "SESSION"
}'
      output: '{
}'

   Mimoto_GetCredentialsForPresentation_invalidWalletID_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with invalid wallet id
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_02
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
        "cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "invalidID",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
        "cookieName": "SESSION"
}'
      output: '{
       "errorCode": "invalid_request"
}'
   Mimoto_GetCredentialsForPresentation_invalidPresentationID_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with invalid presentation ID id
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_03
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
      	"cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "$ID:CreateWallet_all_Valid_Smoke_sid_walletId$",
        "presentationId": "invalidPresentationID",
      	"cookieName": "SESSION"
}'
      output: '{
       "errorCode": "invalid_request",
       "errorMessage": "Invalid Wallet ID. Session and request Wallet ID do not match"
}'

   Mimoto_GetCredentialsForPresentation_WithoutLogin_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get list of all the presentations that is present in DB without login and expects to fail
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_04
      role: userDefinedCookie
      restMethod: get
      checkOnlyStatusCodeInResponse: true
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/responseCode
      input: '{
      	"cookie": "withoutLogin",
        "walletId": "$ID:CreateWallet_all_Valid_Smoke_sid_walletId$",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
      	"cookieName": "SESSION"
}'
      output: '{
      "responseCode": "401"
}'

   Mimoto_GetCredentialsForPresentation_WithExpiredSession_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get list of all the presentations that is present in DB with expired login and expects to fail
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_05
      role: userDefinedCookie
      restMethod: get
      checkOnlyStatusCodeInResponse: true
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/responseCode
      input: '{
      	"cookie": "OGYwNWI5YWQtZjg0MS00NmM2LWJiZTgtOGRmMWYwMGYzNzcy",
        "walletId": "$ID:CreateWallet_all_Valid_Smoke_sid_walletId$",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
      	"cookieName": "SESSION"
}'
      output: '{
      "responseCode": "401"
}'

   Mimoto_GetCredentialsForPresentation_emptyWalletID_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with empty wallet id
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_06
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
      	"cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
      	"cookieName": "SESSION"
}'
      output: '{
       "errorCode": "invalid_request"
}'

   Mimoto_GetCredentialsForPresentation_invalidWalletIdAndPresentationID_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with invalid wallet id and presentation Id
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_07
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
      	"cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "invalidWalletID",
        "presentationId": "invalidPresentationId",
      	"cookieName": "SESSION"
}'
      output: '{
       "errorCode": "invalid_request"
}'

   Mimoto_GetCredentialsForPresentation_emptyStringWalletId_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with emptry String wallet id
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_08
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
      	"cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "     ",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
      	"cookieName": "SESSION"
}'
      output: '{
       "errorCode": "invalid_request"
}'

   Mimoto_GetCredentialsForPresentation_lockedWallet_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with locked wallet
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_09
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
      	"cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "null",
        "presentationId": "$ID:VerifiablePresentationAuthorization_all_Valid_Smoke_sid_presentationId$",
      	"cookieName": "SESSION"
}'
      output: '{
       "errorCode": "wallet_locked"
}'

   Mimoto_GetCredentialsForPresentation_emptyPresentationID_Smoke_Neg:
      endPoint: /v1/mimoto/wallets/{walletId}/presentations/{presentationId}/credentials
      description: Get credentials list with empty presentation ID id
      uniqueIdentifier: TC_Mimoto_GetCredentialsForPresentation_10
      role: userDefinedCookie
      restMethod: get
      inputTemplate: mimoto/LoginFlow/Presentations/GetCredentialsForPresentation/GetCredentialsForPresentation
      outputTemplate: mimoto/error2
      input: '{
      	"cookie": "$ID:GoogleLoginToken_all_Valid_Smoke_sessionCookie$",
        "walletId": "$ID:CreateWallet_all_Valid_Smoke_sid_walletId$",
        "presentationId": " ",
      	"cookieName": "SESSION"
}'
      output: '{
       "errorCode": "invalid_request",
       "errorMessage": "Invalid Wallet ID. Session and request Wallet ID do not match"
}'